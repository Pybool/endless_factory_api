# Generated by Django 3.2.13 on 2022-07-21 07:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('description', models.TextField(default='N/A')),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_image')),
            ],
        ),
        migrations.CreateModel(
            name='OptionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='OptionValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('option_type', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.optiontype')),
            ],
            options={
                'unique_together': {('value', 'option_type')},
            },
        ),
        migrations.CreateModel(
            name='ProductCountViews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.IntegerField()),
                ('product_uid', models.UUIDField(editable=False)),
                ('view_counts', models.IntegerField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'required': 'Name can not be blank'}, max_length=50, unique=True)),
                ('slug', models.SlugField(editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('color', models.CharField(default='', max_length=100)),
                ('title', models.CharField(default='', max_length=200)),
                ('subtitle', models.CharField(default='', max_length=200)),
                ('description', models.TextField()),
                ('model_number', models.CharField(max_length=100)),
                ('min_order_quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_order_quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('condition_option', models.CharField(choices=[('New', 'New'), ('Refurbished', 'Refurbished')], default='New', max_length=100)),
                ('delivery_option', models.CharField(choices=[('Pickup Available', 'Pickup Available'), ('Delivery Available', 'Delivery Available'), ('Both', 'Both')], default='Both', max_length=100)),
                ('pricing_option', models.CharField(choices=[('Fixed Price', 'Fixed Price'), ('Sliding Scale Depending On Volume', 'Sliding Scale Depending On Volume'), ('Contact Us', 'Contact Us')], default='Fixed Price', max_length=200)),
                ('product_type', models.CharField(default='', max_length=200)),
                ('eco_friendly', models.BooleanField(default=False)),
                ('duration', models.IntegerField(default=30)),
                ('initial_stock', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('current_stock', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('cost_price', models.DecimalField(decimal_places=2, default=1000.0, max_digits=9, validators=[django.core.validators.MinValueValidator(1.0)])),
                ('price', models.DecimalField(decimal_places=2, default=1.0, max_digits=9, validators=[django.core.validators.MinValueValidator(1.0)])),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, validators=[django.core.validators.MinValueValidator(1.0)])),
                ('payment_plan_acceptance_option', models.CharField(max_length=200)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='products.category')),
                ('option_type', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.optiontype')),
                ('search_tags', models.ManyToManyField(to='products.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment_type', models.CharField(choices=[('Image', 'Image'), ('Video', 'Video')], default='Image', max_length=200)),
                ('file', models.FileField(null=True, upload_to='product_attachments')),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=2, default=1.0, max_digits=9, validators=[django.core.validators.MinValueValidator(1.0)])),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, validators=[django.core.validators.MinValueValidator(1.0)])),
                ('option_value', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.optionvalue')),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'unique_together': {('product', 'option_value')},
            },
        ),
    ]
